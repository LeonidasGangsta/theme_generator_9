<?php

/**
 * @file
 * Functions to support theming in the <%= themeNameMachine %> theme.
 */

use Drupal\image\Entity\ImageStyle;
use Drupal\Component\Utility\Html;
use Drupal\Core\Link;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK() for paragraphs.
 */
function <%= themeNameMachine %>_preprocess_paragraph(&$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];

  /* Slider paragraph. */

  $paragraph_preprocess_function = '<%= themeNameMachine %>_preprocess_paragraph__' . $paragraph->bundle();
  if (function_exists($paragraph_preprocess_function)) {
    $paragraph_preprocess_function($variables);
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for search_api_page_block_form_search_results().
 */
function <%= themeNameMachine %>_form_search_api_page_block_form_search_results_alter(&$form, $form_state, $form_id) {
  // Remove the 'invisible' option on the label.
  unset($form['keys']['#title_display']);

  // Let the CSS more easily adjust the size of the field.
  unset($form['keys']['#size']);

  // Change the title of the keywords field.
  $form['keys']['#title'] = t('Search term(s)');

  // Adding placeholder to text search field.
  $form['keys']['#attributes']['placeholder'] = t('Search Site');
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for 'input'.
 */
function <%= themeNameMachine %>_theme_suggestions_input_alter(array &$suggestions, array $variables) {
  // On submit buttons, add a theme suggestion that appends the submit button's
  // label to the filename, e.g. if the submit button is "Search" then the file
  // suggestion becomes "input__submit__search".
  if ($variables['theme_hook_original'] == 'input__submit') {
    if (!empty($variables['element']['#value'])) {
      $title = strtolower(Html::cleanCssIdentifier($variables['element']['#value']));
      $suggestions[] = $variables['theme_hook_original'] . '__' . $title;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function <%= themeNameMachine %>_preprocess_html(array &$variables) {

}

/**
 * Implements hook_page_attachments_alter().
 */
function <%= themeNameMachine %>_page_attachments_alter(array &$page) {

}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function <%= themeNameMachine %>_preprocess_page(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function <%= themeNameMachine %>_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function <%= themeNameMachine %>_theme_suggestions_node_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_HOOK().
 */
function <%= themeNameMachine %>_preprocess_block(array &$variables) {
  // Use inline svg in the branding block.
  if ($variables['plugin_id'] == 'system_branding_block') {
    if (isset($variables['site_logo'])) {
      $logo_path = DRUPAL_ROOT . $variables['site_logo'];
      // If logo is a SVG lets load it content so we can inline it.
      if (strlen($logo_path) - strpos($logo_path, '.svg') === 4) {
        $variables['site_logo_svg'] = file_get_contents($logo_path);
      }
    }
  }
}

/**
 * Preprocess function for block content template.
 */
function <%= themeNameMachine %>_preprocess_block_content(array &$variables) {
  $block_content = $variables['elements']['#block_content'];

  /* Views block. */

  /* Gallery Carousel. */

  $block_preprocess_function = '<%= themeNameMachine %>_preprocess_block_content__' . $block_content->bundle();
  if (function_exists($block_preprocess_function)) {
    $block_preprocess_function($variables);
  }
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function <%= themeNameMachine %>_theme_suggestions_field_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function <%= themeNameMachine %>_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_node().
 */
function <%= themeNameMachine %>_preprocess_node(array &$variables) {
  if (!empty($variables['elements']['#node']) && is_object($variables['elements']['#node']) && method_exists($variables['elements']['#node'], 'getType')) {
    // Ensure that the node variable exists and is an object.
    $function = __FUNCTION__ . '_' . $variables['elements']['#node']->getType();
    if (function_exists($function)) {
      $function($variables);
    }
  }
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function <%= themeNameMachine %>_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
}

/**
 * Implements hook_preprocess_form().
 */
function <%= themeNameMachine %>_preprocess_form(array &$variables) {
}

/**
 * Implements hook_preprocess_select().
 */
function <%= themeNameMachine %>_preprocess_select(array &$variables) {
}

/**
 * Implements hook_preprocess_field().
 */
function <%= themeNameMachine %>_preprocess_field(array &$variables, $hook) {
}

/**
 * Implements hook_preprocess_details().
 */
function <%= themeNameMachine %>_preprocess_details(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function <%= themeNameMachine %>_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_paragraph_alter().
 */
function <%= themeNameMachine %>_theme_suggestions_paragraph_alter(array &$suggestions, array $variables) {

}

/* Latest News. */

/* Media Library. */
